env:
  browser: true
  es6: true
overrides:
  - env:
      mocha: true
    files:
      - ./source/js/**/*.test.js
  - env:
      node: true
    files:
      - ./*.js
      - ./gulp/**/*.js
    globals:
      $: readonly
    parserOptions:
      sourceType: script
    rules:
      callback-return: 'off'
      global-require: 'off'
      handle-callback-err: 'off'
      import/no-dynamic-require: 'off'
      no-buffer-constructor: error
      no-mixed-requires: 'off'
      no-new-require: error
      no-path-concat: error
      no-process-env: 'off'
      no-process-exit: 'off'
      no-restricted-modules: 'off'
      no-sync: 'off'
      strict:
        - error
        - safe
parser: babel-eslint
parserOptions:
  ecmaVersion: 2018
  sourceType: module
plugins:
  - import
  - sort-class-members
rules:
  accessor-pairs: 'off'
  array-bracket-newline:
    - 'off'
    - consistent
  array-bracket-spacing:
    - error
    - never
  array-callback-return:
    - error
    - allowImplicit: true
  array-element-newline:
    - 'off'
    - minItems: 3
      multiline: true
  arrow-body-style:
    - error
    - as-needed
    - requireReturnForObjectLiteral: false
  arrow-parens:
    - error
    - always
  arrow-spacing:
    - error
    - after: true
      before: true
  block-scoped-var: error
  block-spacing:
    - error
    - always
  brace-style:
    - error
    - 1tbs
    - allowSingleLine: true
  camelcase:
    - error
    - properties: never
  capitalized-comments:
    - 'off'
    - never
    - block:
        ignoreConsecutiveComments: true
        ignoreInlineComments: true
        ignorePattern: .*
      line:
        ignoreConsecutiveComments: true
        ignoreInlineComments: true
        ignorePattern: .*
  class-methods-use-this: 'off'
  comma-dangle:
    - error
    - arrays: always-multiline
      exports: always-multiline
      functions: only-multiline
      imports: always-multiline
      objects: always-multiline
  comma-spacing:
    - error
    - after: true
      before: false
  comma-style:
    - error
    - last
    - exceptions:
        ArrayExpression: false
        ArrayPattern: false
        ArrowFunctionExpression: false
        CallExpression: false
        FunctionDeclaration: false
        FunctionExpression: false
        ImportDeclaration: false
        NewExpression: false
        ObjectExpression: false
        ObjectPattern: false
        VariableDeclaration: false
  complexity:
    - 'off'
    - 11
  computed-property-spacing:
    - error
    - never
  consistent-return: 'off'
  consistent-this: 'off'
  constructor-super: error
  curly:
    - error
    - multi-line
  default-case:
    - error
    - commentPattern: ^no default$
  dot-notation:
    - error
    - allowKeywords: true
  eol-last:
    - error
    - always
  eqeqeq:
    - error
    - always
    - 'null': ignore
  for-direction: error
  func-call-spacing:
    - error
    - never
  func-name-matching: 'off'
  func-names:
    - error
    - as-needed
  func-style:
    - 'off'
    - expression
  function-paren-newline:
    - error
    - consistent
  generator-star-spacing:
    - error
    - after: true
      before: false
  getter-return:
    - error
    - allowImplicit: true
  global-require: error
  guard-for-in: error
  id-blacklist: 'off'
  id-length: 'off'
  id-match: 'off'
  implicit-arrow-linebreak:
    - error
    - beside
  import/default: 'off'
  import/dynamic-import-chunkname:
    - 'off'
    - importFunctions: []
      webpackChunknameFormat: '[0-9a-zA-Z-_/.]+'
  import/export: error
  import/exports-last: 'off'
  import/extensions:
    - error
    - ignorePackages
    - js: never
      jsx: never
      mjs: never
  import/first: error
  import/group-exports: 'off'
  import/imports-first: 'off'
  import/max-dependencies:
    - 'off'
    - max: 10
  import/named: error
  import/namespace: 'off'
  import/newline-after-import: error
  import/no-absolute-path: error
  import/no-amd: error
  import/no-anonymous-default-export:
    - 'off'
    - allowAnonymousClass: false
      allowAnonymousFunction: false
      allowArray: false
      allowArrowFunction: false
      allowLiteral: false
      allowObject: false
  import/no-commonjs: 'off'
  import/no-cycle:
    - error
  import/no-default-export: 'off'
  import/no-deprecated: 'off'
  import/no-duplicates: error
  import/no-dynamic-require: error
  import/no-extraneous-dependencies:
    - error
    - devDependencies:
        - test/**
        - tests/**
        - spec/**
        - '**/__tests__/**'
        - '**/__mocks__/**'
        - 'test.{js,jsx}'
        - 'test-*.{js,jsx}'
        - '**/*{.,_}{test,spec}.{js,jsx}'
        - '**/jest.config.js'
        - '**/jest.setup.js'
        - '**/vue.config.js'
        - '**/webpack.config.js'
        - '**/webpack.config.*.js'
        - '**/rollup.config.js'
        - '**/rollup.config.*.js'
        - '**/gulpfile.js'
        - '**/gulpfile.*.js'
        - '**/Gruntfile{,.js}'
        - '**/postcss.config.js'
        - '**/protractor.conf.js'
        - '**/protractor.conf.*.js'
      optionalDependencies: false
  import/no-internal-modules:
    - 'off'
    - allow: []
  import/no-mutable-exports: error
  import/no-named-as-default: error
  import/no-named-as-default-member: error
  import/no-named-default: error
  import/no-named-export: 'off'
  import/no-namespace: 'off'
  import/no-nodejs-modules: 'off'
  import/no-relative-parent-imports: 'off'
  import/no-restricted-paths: 'off'
  import/no-self-import: error
  import/no-unassigned-import: 'off'
  import/no-unresolved:
    - error
    - caseSensitive: true
      commonjs: true
  import/no-unused-modules:
    - 'off'
    - ignoreExports: []
      missingExports: true
      unusedExports: true
  import/no-useless-path-segments: error
  import/no-webpack-loader-syntax: error
  import/order:
    - error
    - groups:
        - - builtin
          - external
          - internal
  import/prefer-default-export: error
  import/unambiguous: 'off'
  indent:
    - error
    - 2
    - ArrayExpression: 1
      CallExpression:
        arguments: 1
      FunctionDeclaration:
        body: 1
        parameters: 1
      FunctionExpression:
        body: 1
        parameters: 1
      ImportDeclaration: 1
      ObjectExpression: 1
      SwitchCase: 1
      VariableDeclarator: 1
      flatTernaryExpressions: false
      ignoreComments: false
      ignoredNodes:
        - JSXElement
        - JSXElement > *
        - JSXAttribute
        - JSXIdentifier
        - JSXNamespacedName
        - JSXMemberExpression
        - JSXSpreadAttribute
        - JSXExpressionContainer
        - JSXOpeningElement
        - JSXClosingElement
        - JSXText
        - JSXEmptyExpression
        - JSXSpreadChild
      outerIIFEBody: 1
  init-declarations: 'off'
  jsx-quotes:
    - 'off'
    - prefer-double
  key-spacing:
    - error
    - afterColon: true
      beforeColon: false
  keyword-spacing:
    - error
    - after: true
      before: true
      overrides:
        case:
          after: true
        return:
          after: true
        throw:
          after: true
  line-comment-position:
    - 'off'
    - applyDefaultPatterns: true
      ignorePattern: ''
      position: above
  linebreak-style:
    - error
    - unix
  lines-around-comment: 'off'
  lines-around-directive:
    - error
    - after: always
      before: always
  lines-between-class-members:
    - error
    - always
    - exceptAfterSingleLine: true
  max-classes-per-file:
    - 'off'
    - 1
  max-depth:
    - 'off'
    - 4
  max-len:
    - error
    - code: 100
      ignoreComments: false
      ignoreRegExpLiterals: true
      ignoreStrings: true
      ignoreTemplateLiterals: true
      ignoreUrls: true
  max-lines:
    - 'off'
    - max: 300
      skipBlankLines: true
      skipComments: true
  max-lines-per-function:
    - 'off'
    - IIFEs: true
      max: 50
      skipBlankLines: true
      skipComments: true
  max-nested-callbacks: 'off'
  max-params:
    - 'off'
    - 3
  max-statements:
    - 'off'
    - 10
  max-statements-per-line:
    - 'off'
    - max: 1
  multiline-comment-style:
    - 'off'
    - starred-block
  multiline-ternary:
    - 'off'
    - never
  new-cap:
    - error
    - capIsNew: false
      capIsNewExceptions:
        - Immutable.Map
        - Immutable.Set
        - Immutable.List
      newIsCap: true
      newIsCapExceptions: []
  new-parens: error
  newline-after-var: 'off'
  newline-before-return: 'off'
  newline-per-chained-call:
    - error
    - ignoreChainWithDepth: 4
  no-alert: warn
  no-array-constructor: error
  no-async-promise-executor: 'off'
  no-await-in-loop: error
  no-bitwise: error
  no-caller: error
  no-case-declarations: error
  no-catch-shadow: 'off'
  no-class-assign: error
  no-compare-neg-zero: error
  no-cond-assign:
    - error
    - always
  no-confusing-arrow:
    - error
    - allowParens: true
  no-console: 'off'
  no-const-assign: error
  no-constant-condition: warn
  no-continue: error
  no-control-regex: error
  no-debugger: error
  no-delete-var: error
  no-div-regex: 'off'
  no-dupe-args: error
  no-dupe-class-members: error
  no-dupe-keys: error
  no-duplicate-case: error
  no-duplicate-imports: 'off'
  no-else-return:
    - error
    - allowElseIf: false
  no-empty: error
  no-empty-character-class: error
  no-empty-function:
    - error
    - allow:
        - arrowFunctions
        - functions
        - methods
  no-empty-pattern: error
  no-eq-null: 'off'
  no-eval: error
  no-ex-assign: error
  no-extend-native: error
  no-extra-bind: error
  no-extra-boolean-cast: error
  no-extra-label: error
  no-extra-parens:
    - 'off'
    - all
    - conditionalAssign: true
      enforceForArrowConditionals: false
      ignoreJSX: all
      nestedBinaryExpressions: false
      returnAssign: false
  no-extra-semi: error
  no-fallthrough: error
  no-floating-decimal: error
  no-func-assign: error
  no-global-assign:
    - error
    - exceptions: []
  no-implicit-coercion:
    - 'off'
    - allow: []
      boolean: false
      number: true
      string: true
  no-implicit-globals: 'off'
  no-implied-eval: error
  no-inline-comments: 'off'
  no-inner-declarations: error
  no-invalid-regexp: error
  no-invalid-this: 'off'
  no-irregular-whitespace: error
  no-iterator: error
  no-label-var: error
  no-labels:
    - error
    - allowLoop: false
      allowSwitch: false
  no-lone-blocks: error
  no-lonely-if: error
  no-loop-func: error
  no-magic-numbers:
    - 'off'
    - detectObjects: false
      enforceConst: true
      ignore: []
      ignoreArrayIndexes: true
  no-misleading-character-class: 'off'
  no-mixed-operators:
    - error
    - allowSamePrecedence: false
      groups:
        - - '%'
          - '**'
        - - '%'
          - +
        - - '%'
          - '-'
        - - '%'
          - '*'
        - - '%'
          - /
        - - '**'
          - +
        - - '**'
          - '-'
        - - '**'
          - '*'
        - - '**'
          - /
        - - '&'
          - '|'
          - ^
          - '~'
          - '<<'
          - '>>'
          - '>>>'
        - - ==
          - '!='
          - ===
          - '!=='
          - '>'
          - '>='
          - <
          - <=
        - - '&&'
          - '||'
        - - in
          - instanceof
  no-mixed-spaces-and-tabs: error
  no-multi-assign:
    - error
  no-multi-spaces:
    - error
    - ignoreEOLComments: false
  no-multi-str: error
  no-multiple-empty-lines:
    - error
    - max: 2
      maxEOF: 0
  no-native-reassign: 'off'
  no-negated-condition: 'off'
  no-negated-in-lhs: 'off'
  no-nested-ternary: error
  no-new: error
  no-new-func: error
  no-new-object: error
  no-new-symbol: error
  no-new-wrappers: error
  no-obj-calls: error
  no-octal: error
  no-octal-escape: error
  no-param-reassign:
    - error
    - props: false
  no-plusplus:
    - error
    - allowForLoopAfterthoughts: true
  no-proto: error
  no-prototype-builtins: error
  no-redeclare: error
  no-regex-spaces: error
  no-restricted-globals:
    - error
    - isFinite
    - isNaN
    - addEventListener
    - blur
    - close
    - closed
    - confirm
    - defaultStatus
    - defaultstatus
    - event
    - external
    - find
    - focus
    - frameElement
    - frames
    - history
    - innerHeight
    - innerWidth
    - length
    - location
    - locationbar
    - menubar
    - moveBy
    - moveTo
    - name
    - onblur
    - onerror
    - onfocus
    - onload
    - onresize
    - onunload
    - open
    - opener
    - opera
    - outerHeight
    - outerWidth
    - pageXOffset
    - pageYOffset
    - parent
    - print
    - removeEventListener
    - resizeBy
    - resizeTo
    - screen
    - screenLeft
    - screenTop
    - screenX
    - screenY
    - scroll
    - scrollbars
    - scrollBy
    - scrollTo
    - scrollX
    - scrollY
    - self
    - status
    - statusbar
    - stop
    - toolbar
    - top
  no-restricted-imports:
    - 'off'
    - paths: []
      patterns: []
  no-restricted-properties:
    - error
    - message: arguments.callee is deprecated
      object: arguments
      property: callee
    - message: Please use Number.isFinite instead
      object: global
      property: isFinite
    - message: Please use Number.isFinite instead
      object: self
      property: isFinite
    - message: Please use Number.isFinite instead
      object: window
      property: isFinite
    - message: Please use Number.isNaN instead
      object: global
      property: isNaN
    - message: Please use Number.isNaN instead
      object: self
      property: isNaN
    - message: Please use Number.isNaN instead
      object: window
      property: isNaN
    - message: Please use Object.defineProperty instead.
      property: __defineGetter__
    - message: Please use Object.defineProperty instead.
      property: __defineSetter__
    - message: Use the exponentiation operator (**) instead.
      object: Math
      property: pow
  no-restricted-syntax:
    - error
    - message: Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand.
      selector: LabeledStatement
    - message: '`with` is disallowed in strict mode because it makes code impossible to predict and optimize.'
      selector: WithStatement
  no-return-assign:
    - error
    - always
  no-return-await: error
  no-script-url: error
  no-self-assign:
    - error
    - props: false
  no-self-compare: error
  no-sequences: error
  no-shadow: error
  no-shadow-restricted-names: error
  no-spaced-func: error
  no-sparse-arrays: error
  no-tabs: error
  no-template-curly-in-string: error
  no-ternary: 'off'
  no-this-before-super: error
  no-throw-literal: error
  no-trailing-spaces:
    - error
    - ignoreComments: false
      skipBlankLines: false
  no-undef: error
  no-undef-init: error
  no-undefined: 'off'
  no-underscore-dangle: 'off'
  no-unexpected-multiline: error
  no-unmodified-loop-condition: 'off'
  no-unneeded-ternary:
    - error
    - defaultAssignment: false
  no-unreachable: error
  no-unsafe-finally: error
  no-unsafe-negation: error
  no-unused-expressions:
    - error
    - allowShortCircuit: false
      allowTaggedTemplates: false
      allowTernary: false
  no-unused-labels: error
  no-unused-vars:
    - error
    - args: after-used
      ignoreRestSiblings: true
      vars: all
  no-use-before-define:
    - error
    - classes: true
      functions: true
      variables: true
  no-useless-call: 'off'
  no-useless-catch: 'off'
  no-useless-computed-key: error
  no-useless-concat: error
  no-useless-constructor: error
  no-useless-escape: error
  no-useless-rename:
    - error
    - ignoreDestructuring: false
      ignoreExport: false
      ignoreImport: false
  no-useless-return: error
  no-var: error
  no-void: 'off'
  no-warning-comments:
    - 'off'
    - location: start
      terms:
        - todo
        - fixme
        - xxx
  no-whitespace-before-property: error
  no-with: error
  nonblock-statement-body-position:
    - error
    - beside
    - overrides: {}
  object-curly-newline:
    - error
    - consistent: true
      multiline: true
  object-curly-spacing:
    - error
    - always
  object-property-newline:
    - error
    - allowAllPropertiesOnSameLine: true
  object-shorthand:
    - error
    - always
    - avoidQuotes: true
      ignoreConstructors: false
  one-var:
    - error
    - never
  one-var-declaration-per-line:
    - error
    - always
  operator-assignment:
    - error
    - always
  operator-linebreak:
    - error
    - before
    - overrides:
        =: none
  padded-blocks:
    - error
    - blocks: never
      classes: never
      switches: never
  padding-line-between-statements: 'off'
  prefer-arrow-callback:
    - error
    - allowNamedFunctions: false
      allowUnboundThis: true
  prefer-const:
    - error
    - destructuring: any
      ignoreReadBeforeAssign: true
  prefer-destructuring:
    - error
    - AssignmentExpression:
        array: true
        object: true
      VariableDeclarator:
        array: false
        object: true
    - enforceForRenamedProperties: false
  prefer-named-capture-group: 'off'
  prefer-numeric-literals: error
  prefer-object-spread: 'off'
  prefer-promise-reject-errors:
    - error
    - allowEmptyReject: true
  prefer-reflect: 'off'
  prefer-rest-params: error
  prefer-spread: error
  prefer-template: error
  quote-props:
    - error
    - consistent-as-needed
  quotes:
    - error
    - single
    - allowTemplateLiterals: true
  radix: error
  require-atomic-updates: 'off'
  require-await: 'off'
  require-jsdoc: 'off'
  require-unicode-regexp: 'off'
  require-yield: error
  rest-spread-spacing:
    - error
    - never
  semi:
    - error
    - always
  semi-spacing:
    - error
    - after: true
      before: false
  semi-style:
    - error
    - last
  sort-class-members/sort-class-members:
    - 2
    - accessorPairPositioning: getThenSet
      order:
        - '[properties]'
        - '[arrow-function-properties]'
        - constructor
        - '[accessor-pairs]'
        - '[getters]'
        - '[setters]'
        - '[methods]'
        - '[async-methods]'
        - '[static-properties]'
        - '[static-methods]'
      stopAfterFirstProblem: true
  sort-imports:
    - 'off'
    - ignoreCase: false
      ignoreDeclarationSort: false
      ignoreMemberSort: false
      memberSyntaxSortOrder:
        - none
        - all
        - multiple
        - single
  sort-keys:
    - 'off'
    - asc
    - caseSensitive: false
      natural: true
  sort-vars: 'off'
  space-before-blocks: error
  space-before-function-paren:
    - error
    - anonymous: always
      asyncArrow: always
      named: never
  space-in-parens:
    - error
    - never
  space-infix-ops: error
  space-unary-ops:
    - error
    - nonwords: false
      overrides: {}
      words: true
  spaced-comment:
    - error
    - always
    - block:
        balanced: true
        exceptions:
          - '-'
          - +
        markers:
          - =
          - '!'
      line:
        exceptions:
          - '-'
          - +
        markers:
          - =
          - '!'
  strict:
    - error
    - never
  switch-colon-spacing:
    - error
    - after: true
      before: false
  symbol-description: error
  template-curly-spacing:
    - error
    - never
  template-tag-spacing:
    - error
    - never
  unicode-bom:
    - error
    - never
  use-isnan: error
  valid-jsdoc: 'off'
  valid-typeof:
    - error
    - requireStringLiterals: true
  vars-on-top: error
  wrap-iife:
    - error
    - outside
    - functionPrototypeMethods: false
  wrap-regex: 'off'
  yield-star-spacing:
    - error
    - after
  yoda: error
settings:
  import/core-modules: []
  import/extensions:
    - .js
    - .jsx
    - .mjs
  import/ignore:
    - node_modules
    - \\.(coffee|scss|css|less|hbs|svg|json)$
  import/resolver:
    node:
      extensions:
        - .js
        - .json
        - .mjs
